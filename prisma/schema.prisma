generator client {
  provider = "prisma-client-js"
}

generator markdown {
  provider = "prisma-markdown"
  output   = "../wiki/dev/database.md"
  title    = "CompOffice Database"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

/// @namespace Banking
/// Banki fiókok egy adott időpontokban lévő állapota
///
/// Power BI reportok és kimutatások készítéséhez szükséges adatok
///
/// A (`data`, `account`) páros egyedi
model bank_account {
  /// Elsődleges kulcs
  ///
  /// @format uuid  
  id Int @id(map: "PK__bank_acc__3213E83FC6E22FC0")

  /// A bank számla egyenlege forintban  
  amount_HUF Float

  /// A bank számla egyenlege a `currency` valutában
  amount Float

  /// A számla valutája
  ///
  /// A {@link currency} tábla {@link code} oszlopában felsoorolt valuták közül
  currency String @db.Char(3)

  /// A számla egyenlegéhez tartozó időpont
  date DateTime @db.Date

  /// A számla azonosítója
  account String @default("MKB_HUF", map: "DF__bank_acco__accou__68336F3E") @db.VarChar(8)

  /// A számla egyenlege euróban
  amount_EUR Float

  bank_account_numbers_fields bank_account_numbers @relation("Account", fields: [account], references: [alias], onUpdate: NoAction, map: "fk_bank_account_account")

  currency_field currency @relation("BA Currency", fields: [currency], references: [code], onUpdate: NoAction, map: "fk_bank_account_currency")

  @@unique([date, account], map: "uq_bank_account")
}

/// @namespace Banking
/// Banki fiókok
///
/// Power BI reportok és kimutatások készítéséhez szükséges adatok
///
/// A (`bank`, `currency`) páros egyedi
model bank_account_numbers {
  /// Elsődleges kulcs
  ///
  /// A számla azonosítója
  /// @format uuid
  alias String @id(map: "PK__bank_acc__8C585C055AF05894") @db.VarChar(8)

  /// A számlát vezető bank neve
  bank String @db.VarChar(200)

  /// A számlához tartozó IBAN szám
  IBAN String @db.VarChar(100)

  /// A számla valutája
  currency String @db.Char(3)

  bank_account bank_account[] @relation("Account")

  currency_field currency @relation("BAN Currency", fields: [currency], references: [code], onUpdate: NoAction, map: "fk_bank_account_numbers_currency")

  @@unique([bank, currency], map: "uq_bank_account_numbers")
}

/// @namespace General
/// Országok
model country {
  /// Elsődleges kulcs
  ///
  /// Ország kódja
  /// @format uuid
  code String @id(map: "PK__country__357D4CF84D3EA2BB") @db.Char(2)

  /// Ország neve
  name String @unique(map: "UQ__country__72E12F1B4E0C2A7A") @db.VarChar(100)

  /// Ország régiója
  region          String            @db.VarChar(5)
  region_field    region            @relation("Region", fields: [region], references: [code], onUpdate: NoAction, map: "fk_country_region")
  customer_fields customer[]        @relation("Country Customers")
  pack_event_fields  pack_unit_event[] @relation("Country Project")
}

/// @namespace General
/// @erd Banking
/// Elfogadott Valuták
model currency {
  /// Elsődleges kulcs
  ///
  /// Valuta kódja
  /// @format uuid
  code String @id(map: "PK__currency__357D4CF8B32F5190") @db.Char(3)

  bank_account_field        bank_account[]         @relation("BA Currency")
  banc_account_number_field bank_account_numbers[] @relation("BAN Currency")
  currency_exchange_field   currency_exchange[]    @relation("Currency Exchange")
  invoice_field             invoice[]              @relation("Invoice Currency")
  order_field               order_pack_event[]     @relation("Order Currency")
}

/// @namespace General
/// Valuta árfolyamok az adott időpontban (Cache)
///
/// A (`exchange_date`, `currency`) páros egyedi
model currency_exchange {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__currency__3213E83F5CB9A5FF")

  /// Egységnyi valuta értéke forintban
  HUFvalue Float

  /// Az árfolyam érvényessége 
  exchange_date DateTime @db.Date

  /// Az árfolyam valutája
  currency String @db.Char(3)

  currency_field currency @relation("Currency Exchange", fields: [currency], references: [code], onUpdate: NoAction, map: "fk_currency_exchange_currency")

  @@unique([exchange_date, currency], map: "uq_currency_exchange")
}

/// @namespace Order
/// Ügyfelek
///
/// A képzési rendszerben szereplő ügyfelek / cégek adatai
///
/// A (`name`, `country`) páros egyedi
model customer {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__customer__3213E83F9B2E2E44")

  /// Ügyfél neve
  name String? @db.VarChar(100)

  /// Ügyfél országa / székhelye
  country String @db.Char(2)

  /// Az ügyfél tevékenységi köre
  ///
  /// Meghatározza, hogy milyen iparágban tevékenykedik az ügyfél a {@link industry.id} táblában szereplő iparágak közül
  industry Int?

  /// Fizetési határidő
  terms Int?

  country_field               country            @relation("Country Customers", fields: [country], references: [code], onUpdate: NoAction, map: "fk_customer_country")
  industry_field              industry?          @relation("Customer Industry", fields: [industry], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_industry")
  customer_contact_fields     customer_contact[] @relation("Customer Contact")
  order_pack_event_fields     order_pack_event[] @relation("Customer Order")
  order_pack_event_inv_fields order_pack_event[] @relation("Invoiced Customer Order")
  participant_fields          participant[]      @relation("Participant Customer")

  @@unique([name, country], map: "uq_customer_name_country")
}

/// @namespace Order
/// Kapcsolattartók
model customer_contact {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__customer__3213E83F006EE70F")

  /// Kapcsolattartó vezetékneve
  last_name String @db.VarChar(50)

  /// Kapcsolattartó keresztneve
  first_name String @db.VarChar(50)

  /// Kapcsolattartó neve
  display_name String @unique(map: "UQ__customer__2C575876DC7B6BA3") @db.VarChar(100)

  /// Kapcsolattartó (publikus) email címe
  email String? @db.VarChar(100)

  /// Kapcsolattartó (privát) email címe
  email_private String? @db.VarChar(100)

  /// Kapcsolattartó telefonszáma
  phone1 String? @db.VarChar(20)

  /// Kapcsolattartó másodlagos telefonszáma
  phone2 String? @db.VarChar(20)

  /// A kapcsolattaró munkahelye
  customer Int

  /// Egyéb megjegyzés
  note String? @db.VarChar(500)

  customer_field         customer           @relation("Customer Contact", fields: [customer], references: [id], onUpdate: NoAction, map: "fk_customer_contact_customer")
  order_pack_event_field order_pack_event[] @relation("Order Customer Contact")
}

/// @namespace General
/// Cég szintű szabadságok
model holiday {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__holiday__3213E83FA4166EF7")

  /// Szabadság kezdete
  start_date DateTime @db.Date

  /// Szabadság vége
  end_date DateTime @db.Date

  /// Szabadság megnevezése
  title String? @db.VarChar(100)
}

/// @namespace Order
/// Ügyfelek tevékenységi köre
model industry {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__industry__3213E83F1D79B624")

  /// Az iparág neve
  name String? @unique(map: "UQ__industry__72E12F1BC81CC6A0") @db.VarChar(100)

  customer_fields customer[] @relation("Customer Industry")
}

/// @namespace Instructor
/// Oktatók
model instructor {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__instruct__3213E83F6E79C2E1")

  /// Oktató vezetékneve
  last_name String @db.VarChar(50)

  /// Oktató keresztneve
  first_name String @db.VarChar(50)

  /// Oktató neve
  display_name String @unique(map: "UQ__instruct__2C57587681D1EFB1") @db.VarChar(100)

  /// Oktató (publikus) email címe
  email String? @db.VarChar(100)

  /// Oktató (privát) email címe
  email_private String? @db.VarChar(100)

  /// Oktató telefonszáma
  phone String? @db.VarChar(20)

  /// Oktató személyi igazolvány száma
  id_number String? @db.VarChar(20)

  /// Az oktató cégének azonosítója
  company Int @default(1, map: "DF__instructo__compa__7DCDAAA2")

  /// Az oktató sorszáma a Naptárban
  calendar_index Int @default(1, map: "DF__instructo__calen__7EC1CEDB")

  company_field                     instructor_company           @relation("Instructor Company", fields: [company], references: [id], onUpdate: NoAction, map: "fk_instructor_company")
  instructor_holiday_fields         instructor_holiday[]         @relation("Instructor Holiday")
  instructor_pack_unit_event_fields instructor_pack_unit_event[] @relation("Instructor Training")
}

/// @namespace Instructor
/// Oktatók cégének adatai
///
/// A `name` egyedi
model instructor_company {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__instruct__3213E83FA0B8D54C")

  /// Cég neve
  name              String       @unique(map: "UQ__instruct__72E12F1BD9C014F0") @db.VarChar(100)
  instructor_fields instructor[] @relation("Instructor Company")
}

/// @namespace Instructor
/// Oktatók tervezett szabadságai
///
/// A (`instructor`, `start_date`) páros egyedi
model instructor_holiday {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__instruct__3213E83F11A3D216")

  /// Oktató azonosítója
  instructor Int

  /// Szabadság kezdete
  start_date DateTime @db.Date

  /// Szabadság vége
  end_date DateTime @db.Date

  /// Szabadság megnevezése
  title String @default("holiday", map: "DF__instructo__title__79FD19BE") @db.VarChar(100)

  instructor_field instructor @relation("Instructor Holiday", fields: [instructor], references: [id], onUpdate: NoAction, map: "fk_instructor_holiday_instructor")

  @@unique([instructor, start_date], map: "uq_instrucotr_holiday")
}

/// @namespace Instructor
/// Oktatók rendelései
///
/// Az oktató által tartott megrendelésekhez az oktatóhoz tartozó adatok
///
/// A (`pack_unit_event`, `instructor`) páros egyedi
model instructor_pack_unit_event {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__instruct__3213E83F817743A1")

  /// Egy projeckt egy kurzusának azonosítója
  pack_unit_event Int

  /// Az oktató azonosítója
  instructor Int

  /// Az oktató visszaigazolta-e a rendelést
  confirmed String @db.Char(1)

  // TODO(Kristofy): Pontosítani
  /// Az oktatásért kapott díj fel van-e számolva
  in_finance_plan String @db.Char(1)

  /// Az oktatásért kapott díj számlázva van-e 
  invoice String @db.Char(1)

  /// Az oktatásért kapott díj teljesítve van-e
  coc String @db.Char(1)

  /// Az oktató a kurzus teljes időtartama alatt részt vesz-e
  total String @db.Char(1)

  instructor_field                        instructor                         @relation("Instructor Training", fields: [instructor], references: [id], onUpdate: NoAction, map: "fk_instructor_pack_unit_event_instructor")
  pack_unit_event_field                   pack_unit_event                    @relation("Project Training Day", fields: [pack_unit_event], references: [id], onUpdate: NoAction, map: "fk_instructor_pack_unit_event_pack_unit_event")
  instructor_pack_unit_event_dates_fields instructor_pack_unit_event_dates[] @relation("Instructor Training Day")

  @@unique([pack_unit_event, instructor], map: "uq_instructor_pack_unit_event")
}

/// @namespace Instructor
/// Oktatók rendelésének időpontjai
///
/// Amennyiben oktató nem a teljes időtartamra vesz részt egy kurzuson, akkor az időpontokat itt rögzítjük
model instructor_pack_unit_event_dates {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__instruct__3213E83F5429B4C4")

  /// Az oktató megrendelésének azonosítója
  instructor_pack_unit_event Int?

  /// A kurzus egy napja melyen az oktató részt vesz
  day DateTime? @db.Date

  instructor_pack_unit_event_field instructor_pack_unit_event? @relation("Instructor Training Day", fields: [instructor_pack_unit_event], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_instructor_pack_unit_event_dates")

  @@index([day], map: "instructor_pack_unit_event_dates_day_index")
}

/// @namespace Invoice
/// Számlák
model invoice {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__invoice__3213E83F969B4B28")

  /// Számla száma
  invoice_number String @db.VarChar(200)

  /// A számla kiállítójának azonosítója
  supplier Int

  /// A számla valutája
  currency String @db.Char(3)

  /// Számla típusának azonosítója
  type Int

  /// Számlázás dátuma
  invoice_date DateTime? @db.Date

  /// Kifizetés dátuma
  payment_date DateTime? @db.Date

  /// Beérkezés dátuma
  delivery_date DateTime? @db.Date

  /// Átutalás dátuma
  transfer_date DateTime? @db.Date

  /// Időpont a kumutatásokhoz
  actual_report_date DateTime? @db.Date

  /// Kifizetés státusza
  paid String @db.Char(1)

  /// Számla státusza (valós, tervezett)
  status String @db.Char(1)

  /// Könyvelt vagy sem
  accounting String @db.Char(1)

  /// Megjegyzés
  note String? @db.VarChar(200)

  currency_field      currency       @relation("Invoice Currency", fields: [currency], references: [code], onUpdate: NoAction, map: "fk_invoice_currancy")
  supplier_field      supplier       @relation("Invoice Supplier", fields: [supplier], references: [id], onUpdate: NoAction, map: "fk_invoice_supplier")
  invoice_type_field  invoice_type   @relation("Invoice Type", fields: [type], references: [id], onUpdate: NoAction, map: "fk_invoice_type")
  invoice_line_fields invoice_line[] @relation("Invoice Lines")
}

/// @namespace Invoice
/// Számla sorok
///
/// A számla sorok a számlákhoz tartozó tételek
model invoice_line {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__invoice___3213E83F9BACA21D")

  /// A tétel megnevezése
  title String @db.VarChar(200)

  /// Bruttó összeg
  gross Float @db.Real

  /// ÁFA (százalékban)
  vat Int

  /// Nettó összeg
  net Float @db.Real

  /// Tétel típusának azonosítója
  type Int

  /// Egyéb részletek
  details String? @db.VarChar(1000)

  /// A számla azonosítója
  invoice Int

  /// A Projekt azonosítója
  pack_event Int?

  invoice_field           invoice           @relation("Invoice Lines", fields: [invoice], references: [id], onUpdate: NoAction, map: "fk_invoice_line_invoice")
  pack_event_field           pack_event?       @relation("Project Invoice", fields: [pack_event], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_invoice_line_pack_event")
  invoice_line_type_field invoice_line_type @relation("Invoice Line Type", fields: [type], references: [id], onUpdate: NoAction, map: "fk_invoice_line_type")
}

/// @namespace Invoice
/// Számla tétel típusok
///
/// A (`name`, `type_group`) páros egyedi
model invoice_line_type {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__invoice___3213E83F74F08EBA")

  /// Tétel megnevezése
  name String? @db.VarChar(100)

  /// Tétel csoportja
  type_group Int

  invoice_line_fields           invoice_line[]          @relation("Invoice Line Type")
  invoice_line_type_group_field invoice_line_type_group @relation("Invoice Group", fields: [type_group], references: [id], onUpdate: NoAction, map: "fk_invoice_line_type_group")

  @@unique([name, type_group], map: "uq_invoice_line_type_name_group")
}

/// @namespace Invoice
/// Számla tétel csoportok
model invoice_line_type_group {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__invoice___3213E83FBE8E2748")

  /// Csoport megnevezése
  name String @unique(map: "UQ__invoice___72E12F1BB5623922") @db.VarChar(100)

  invoice_line_type_fields invoice_line_type[] @relation("Invoice Group")
}

/// @namespace Invoice
/// Számla típusok
model invoice_type {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__invoice___3213E83F83D5F893")

  /// Típus megnevezése
  name String @unique(map: "UQ__invoice___72E12F1B8BBA902F") @db.VarChar(100)

  invoice_fields invoice[] @relation("Invoice Type")
}

/// @namespace Order
/// Adott projekthez tartozó megrendelések
model order_pack_event {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__order_pa__3213E83F263F73BA")

  /// A projekt azonosítója
  pack_event Int

  // A megrendelő cég azonosítója
  customer Int

  /// A számlázandó cég azonosítója
  inv_customer Int

  /// Az ügyfél kapcsolattartójának azonosítója
  contact Int?

  /// A megrendelésből származó várható összeg
  ///
  /// A várható összeg a `expected_amount_currency` valutában van megadva
  expected_amount Float

  /// A várható összeg valutája
  expected_amount_currency String @db.Char(3)

  /// A várható összeg áttszámolva forintba
  expected_amount_HUF Float?

  /// A várható összeg áttszámolva euróba
  expected_amount_EUR Float?

  /// ÁFA mértéke
  vat Int?

  /// Kifizetési időpontja
  payment_date DateTime? @db.Date

  /// Rendelés időpontja (Kimutatásokhoz)
  actual_report_date DateTime? @db.Date

  /// A rendelés státusza
  ///
  /// A megrendelés lehet:
  /// - Tervezett LEAD
  /// - Informális INFOR
  /// - Megrendelt OR
  /// - Befejezett FIN
  /// - Törölt CA
  status String @db.VarChar(5)

  /// Van e hozzá kapcsolódó ajánlat
  qoute String @db.Char(1)

  /// Árajánlat
  qoute_number String? @db.VarChar(50)

  /// PO státusza
  po String @db.Char(1)

  /// PO száma
  po_number String? @db.VarChar(50)

  /// Case száma
  case_id String? @db.VarChar(50)

  /// Offer száma
  oid String? @db.VarChar(50)

  /// FAR státusza
  far String @db.Char(1)

  /// számlázás státusza
  invoiced String @db.Char(1)

  /// Számla száma
  invoice_number String? @db.VarChar(50)

  /// Megjegyzés
  note String? @db.VarChar(500)

  /// Kifizetés státusza
  paid String @default("N", map: "DF__order_pack__paid__5A846E65") @db.Char(1)

  /// Adott-e a résztvevők email címe
  anonym String @default("N", map: "DF__order_pac__anony__0A338187") @db.Char(1)

  /// FAR szükséges-e
  is_far_required String? @db.Char(1)

  /// QR
  qr_eval String? @db.Char(1)

  customer_contact_field         customer_contact?       @relation("Order Customer Contact", fields: [contact], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_order_pack_event_contact")
  expected_amount_currency_field currency                @relation("Order Currency", fields: [expected_amount_currency], references: [code], onUpdate: NoAction, map: "fk_order_pack_event_curreny")
  customer_fields                customer                @relation("Customer Order", fields: [customer], references: [id], onUpdate: NoAction, map: "fk_order_pack_event_customer")
  inv_customer_fields            customer                @relation("Invoiced Customer Order", fields: [inv_customer], references: [id], onUpdate: NoAction, map: "fk_order_pack_event_inv_customer")
  pack_event_field                  pack_event              @relation("Proejct Order", fields: [pack_event], references: [id], onUpdate: NoAction, map: "fk_order_pack_event_pack_event")
  order_pack_unit_event_fields   order_pack_unit_event[] @relation("Order Units")
}

/// @namespace Order
/// Egy projekthez tartozó megrendelési tétel
///
/// A megrendelt tétel a projekt kurzusának egy részletét jelenti
/// Például egy Kubernetes kurzus egy rész egy Docker bevezető képzés
model order_pack_unit_event {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__order_pa__3213E83F843571C1")

  /// A megrendelés azonosítója
  order_pack_event Int

  /// A megrendelt tétel azonosítója
  pack_unit_event Int

  /// A megrendelében szereplő résztvevők száma
  participant_number Int?

  order_pack_event_field   order_pack_event    @relation("Order Units", fields: [order_pack_event], references: [id], onUpdate: NoAction, map: "fk_pack_order_unit_event_order_pack_evnet")
  pack_unit_event_field    pack_unit_event     @relation("Ordered Units", fields: [pack_unit_event], references: [id], onUpdate: NoAction, map: "fk_pack_order_unit_event_pack_unit_event")
  order_participant_fields order_participant[] @relation("Order Participants")
}

/// @namespace Order
/// A megrendelésben szereplő résztvevők
model order_participant {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__order_pa__3213E83F89A7007A")

  /// Résztvevő azonosítója
  participant Int

  /// A megrendelt tétel azonosítója
  order_pack_unit_event Int

  /// Csere esemény azonosítója
  ///
  /// Amennyiben a résztvevő nem tud részt venni a kurzuson, akkor a csere esemény azonosítója kerül ide
  replace_event Int?

  order_pack_unit_event_field   order_pack_unit_event @relation("Order Participants", fields: [order_pack_unit_event], references: [id], onUpdate: NoAction, map: "fk_order_participant_order_pack_unit_event")
  pack_unit_replace_event_field pack_unit_event?      @relation("Replace Event", fields: [replace_event], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_order_participant_pack_unit_event")
  participant_field             participant           @relation("Attending Participant", fields: [participant], references: [id], onUpdate: NoAction, map: "fk_order_participant_participant")
}

/// @namespace Services
/// Csomag
///
/// Egy csomag egy kurzus amely több modulból / képzésből áll
model pack {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__pack__3213E83FFD465660")

  /// A csomag kódja
  code String @unique(map: "UQ__pack__357D4CF989D30D2D") @db.VarChar(50)

  /// A csomag neve
  name String? @db.VarChar(500)

  /// A csomag státusza
  ///
  /// A csomag lehet:
  /// - Aktív A
  /// - Inaktív I
  status String @db.Char(1)

  /// A csomag lista ára forintban
  list_price_HUF Int?

  /// A csomag lista ára euróban
  list_price_EUR Float?

  /// A csomag téma azonosítója
  ///
  /// A csomag témája a {@link topic.id} táblában szereplő témák közül kerül ki
  topic Int?

  /// A csomag típusa
  ///
  /// A csomag lehet:
  /// - Képzés T
  /// - Szupport S
  /// - Konzultáció C
  type String @db.Char(1)

  topic_field         topic?         @relation("Pack Topic", fields: [topic], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pack_topic")
  pack_version_fields pack_version[] @relation("Pack Version")
}

/// @namespace Services
/// Projekt
///
/// Egy meghirdetett, megrendelhető kurzus
model pack_event {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__pack_eve__3213E83F00B89461")

  /// A Kurzus azonosítója
  pack Int

  /// A Projekt státusza
  ///
  /// A projekt lehet:
  /// - folyamatban PR
  /// - befejezett CL
  /// - törölt CA
  status String @db.Char(2)

  /// A projekt ára forintban
  price_HUF Int?

  /// A projekt ára euróban
  price_EUR Float?

  /// A projekt kezdő dátuma
  start_date DateTime? @db.Date

  /// A projekt befejező dátuma
  end_date DateTime? @db.Date

  /// A projektből származó bevétel forintban
  income_HUF Int?

  /// A projektből származó bevétel euróban
  income_EUR Float?

  /// A projekt típusa
  ///
  /// A projekt lehet:
  /// - Mindenki számára nyílt képzés OPEN
  /// - Zárt csoportos képzés CL
  /// - Csak az írott tananyagot tartalmazó képzés CW
  training_type String @default("CL", map: "DF__pack_even__train__02925FBF") @db.VarChar(4)

  /// Az automatikus laborkörnyezet kiépítésének státusza
  labor_status String @default("N", map: "DF__pack_even__labor__047AA831") @db.Char(1)

  /// Az automatikus tananyag kiküldés státusza
  courseware_status String @default("N", map: "DF__pack_even__cours__056ECC6A") @db.Char(1)

  /// Az automatikus teams csoportok létrehozása és felvételek státusza
  teams_status String @default("N", map: "DF__pack_even__teams__0662F0A3") @db.Char(1)

  /// FAR szükséges-e
  is_far_required String? @db.Char(1)

  /// QR
  qr_eval String? @db.Char(1)

  /// Az oktató neve
  ///
  /// Több oktató esetén "Több oktató"
  instructor_txt String? @db.VarChar(100)

  /// A megrendelő cég neve
  ///
  /// Több cég esetén "Több cég"
  customer_txt String? @db.VarChar(100)

  invoice_line_fields     invoice_line[]     @relation("Project Invoice")
  order_pack_event_fields order_pack_event[] @relation("Proejct Order")
  pack_version_field      pack_version       @relation("Project Pack", fields: [pack], references: [id], onUpdate: NoAction, map: "fk_pack_event_pack_version")
  pack_unit_event_fields  pack_unit_event[]  @relation("Project Units")

  @@index([training_type], map: "pack_event_training_type_index")
}

/// @namespace Services
/// Csomagok felépítése (Kapcsoló tábla)
///
/// Megadja, hogy egy csomag melyik kurzusokból áll
///
/// A (`pack`, `unit`) páros egyedi
model pack_unit {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__pack_uni__3213E83F6F9F23B4")

  /// A csomag megfelelő verziójának azonosítója
  pack Int

  /// A modul megfelelő verziójának azonosítója
  unit Int

  pack_version_field     pack_version      @relation("Course Version", fields: [pack], references: [id], onUpdate: NoAction, map: "fk_pack_unit_pack_version")
  unit_version_field     unit_version      @relation("Module Version", fields: [unit], references: [id], onUpdate: NoAction, map: "fk_pack_unit_unit_version")
  pack_unit_event_fields pack_unit_event[] @relation("Advertised Unit")

  @@unique([pack, unit], map: "uq_pack_unit")
  @@index([pack], map: "pack_unit_pack_index")
}

/// @namespace Services
/// Egy projekthez tartozó modul
model pack_unit_event {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__pack_uni__3213E83F4DAE202E")

  /// A Projekt azonosítója
  pack_event Int

  /// A Csomag és a modul azonosítója
  pack_unit Int

  /// A modul státusza
  ///
  /// A modul lehet:
  /// - folyamatban PR
  /// - befejezett CL
  /// - törölt CA
  status String @db.Char(2)

  /// A modul kezdő dátuma
  start_date DateTime? @db.Date

  /// A modul befejező dátuma
  end_date DateTime? @db.Date

  /// Az időpont státusza
  ///
  /// Az időpont lehet:
  /// - hiányzó M
  /// - tervezett P
  /// - fix F
  date_status String @db.Char(1)

  /// A modul kezdő időpontja lokális idő szerint
  start_time_loc DateTime? @db.Time

  /// A modul befejező időpontja lokális idő szerint
  end_time_loc DateTime? @db.Time

  /// A modul kezdete az adott napokon HH:MM
  start_time_part DateTime? @db.Time

  /// A modul vége az adott napokon HH:MM
  end_time_part DateTime? @db.Time

  /// A modul időzónája
  ///
  /// Az oktatás ehhez az időzónához igazodik
  timezone String? @db.VarChar(50)

  /// A helyszín típusa
  ///
  /// A helyszín lehet:
  /// - Online On
  /// - Az oktató cégnél Com
  /// - Ügyfélnél Cu
  place_type String @db.VarChar(5)

  /// Az oktatás országa (ha az oktatás helyszíne az ügyfél cégénél van)
  country String? @db.Char(2)

  /// Az oktatás városa (ha az oktatás helyszíne az ügyfél cégénél van)
  city String? @db.VarChar(100)

  /// Az oktatás nyelve
  language String @db.VarChar(3)

  /// Az oktatásra jelentkezett résztvevők száma
  participant_number Int?

  /// Félnapos oktatás esetén a naprész (AM, PM, FULL)
  daypart String @default("FULL", map: "DF__pack_unit__daypa__7814D14C") @db.VarChar(4)

  /// Megjegyzések
  notes String? @db.VarChar(500)

  /// Az időzóna különbsége a magyar időzónához képest
  timezone_diff Float?

  /// Az oktatandó ügyfelek a Szombat - Vasárnapot tekintik hétvégeknek
  is_traditional_weekend String @db.Char(1)

  instructor_pack_unit_event_fields instructor_pack_unit_event[] @relation("Project Training Day")
  order_pack_unit_event_fields      order_pack_unit_event[]      @relation("Ordered Units")
  order_participant_replace_fields  order_participant[]          @relation("Replace Event")
  country_field                     country?                     @relation("Country Project", fields: [country], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "fk_pack_unit_event_country")
  pack_event_field                  pack_event                   @relation("Project Units", fields: [pack_event], references: [id], onUpdate: NoAction, map: "fk_pack_unit_event_pack_event")
  pack_unit_field                   pack_unit                    @relation("Advertised Unit", fields: [pack_unit], references: [id], onUpdate: NoAction, map: "fk_pack_unit_event_pack_unit")

  @@index([daypart], map: "pack_unit_event_daypart_index")
  @@index([end_date], map: "pack_unit_event_end_date_index")
  @@index([pack_event], map: "pack_unit_event_pack_event_index")
  @@index([start_date], map: "pack_unit_event_start_date_index")
  @@index([status], map: "pack_unit_event_status_index")
}

/// @namespace Services
/// Csomagok verziói
///
/// Egy csomagnak létehzet több verziója
/// Ezekhez különböző laborkörnyezet és tananyag is tartozhat
///
/// A (`pack`, `version`) páros egyedi
model pack_version {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__pack_ver__3213E83FF02A6A71")

  /// A csomag azonosítója
  pack Int

  /// A csomag verziója
  version String @default("", map: "DF__pack_vers__versi__2B947552") @db.VarChar(10)

  /// Az alapértelmezett verzió
  ///
  /// Amennyiben több verzió is létezik, akkor az alapértelmezett verzió az amelyiket ajánljuk, az újabb projekteket tipikusan ezzel a verzióval hozzuk létre
  is_default String @default("N", map: "DF__pack_vers__is_de__2C88998B") @db.Char(1)

  /// publikálva van-e, ha nem akkor vagy megszűnt vagy fejlesztés alatt van
  published String @default("Y", map: "DF__pack_vers__publi__2D7CBDC4") @db.Char(1)

  pack_event_fields pack_event[] @relation("Project Pack")
  pack_unit_fields  pack_unit[]  @relation("Course Version")
  pack_field        pack         @relation("Pack Version", fields: [pack], references: [id], onUpdate: NoAction, map: "fk_pack_version_pack")

  @@unique([pack, version], map: "uq_pack_version")
}

/// @namespace Order
/// Ügyfelek
model participant {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__particip__3213E83F88812D4E")

  /// Az ügyfél email címe (Ide kapják meg a kurzus információkat és az írott tananyagot)
  email String @unique(map: "uq_participant") @db.VarChar(200)

  /// Az ügyfél neve
  name String @db.VarChar(200)

  /// Az ügyfél jelenlegi cégének azonosítója
  customer Int?

  order_participant_fields order_participant[] @relation("Attending Participant")
  customer_fields          customer?           @relation("Participant Customer", fields: [customer], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_participant_customer")
}

/// @namespace General
/// Régiók
///
/// Régió mint nagyobb földrajzi egység Például közép-európa
///
/// A `name` mező egyedi
model region {
  /// Elsődleges kulcs
  ///
  /// A régió kódja
  /// @format uuid
  code String @id(map: "PK__region__357D4CF803D13338") @db.VarChar(5)

  /// A régió neve
  name    String    @unique(map: "UQ__region__72E12F1BFE11D2B4") @db.VarChar(50)
  country country[] @relation("Region")
}

/// @namespace Invoice
/// A számlát kiállító entitások
///
/// A `name` mező egyedi
model supplier {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__supplier__3213E83F74041355")

  /// A számla kiállítójának neve
  name String @unique(map: "UQ__supplier__72E12F1B9B136983") @db.NVarChar(200)

  invoice_fields invoice[] @relation("Invoice Supplier")
}

/// @namespace Services
/// Képzési témák
///
/// A `name` mező egyedi
model topic {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__topic__3213E83FCDC354C7")

  /// A téma megnevezése
  name String @unique(map: "UQ__topic__72E12F1BE37EEC60") @db.VarChar(150)

  pack_fields pack[] @relation("Pack Topic")
  unit_fields unit[] @relation("Unit Topic")
}

/// @namespace Services
/// Modulok
///
/// Egy modul egy önmagában is oktatható képzési egység
model unit {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__unit__3213E83F95AF58EB")

  /// A modul kódja
  code String @unique(map: "UQ__unit__357D4CF90F552E7A") @db.VarChar(50)

  /// A modul neve
  name String? @db.VarChar(500)

  /// A modul státusza
  ///
  /// A modul lehet:
  /// - Aktív A
  /// - Inaktív I
  status String @db.Char(1)

  /// A modul típusa
  ///
  /// A modul lehet:
  /// - Képzés T
  /// - Szupport S
  /// - Konzultáció C
  type String @db.Char(1)

  /// A modul témája
  ///
  /// A modul témája a {@link topic.id} táblában szereplő témák közül kerül ki
  topic Int?

  /// A modul lista ára forintban
  list_price_HUF Int?

  /// A modul lista ára euróban
  list_price_EUR Float?

  /// A modul időtartama (napokban)
  length Float?

  topic_field         topic?         @relation("Unit Topic", fields: [topic], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_unit_topic")
  unit_version_fields unit_version[] @relation("Unit Version")

  @@index([type], map: "unit_type_index")
}

/// @namespace Services
/// Modulok verziói
///
/// Egy modulnak létezhet több verziója
/// Ezekhez különböző laborkörnyezet és tananyag is tartozhat
///
/// A (`unit`, `version`) páros egyedi
model unit_version {
  /// Elsődleges kulcs
  ///
  /// @format uuid
  id Int @id(map: "PK__unit_ver__3213E83F5981DD6A")

  /// A modul azonosítója
  unit Int

  /// A modul verziója
  version String @default("", map: "DF__unit_vers__versi__22FF2F51") @db.VarChar(10)

  /// Az alapértelmezett verzió 
  ///
  /// Amennyiben több verzió is létezik, akkor az alapértelmezett verzió az amelyiket ajánljuk, az újabb projekteket tipikusan ezzel a verzióval hozzuk létre
  is_default String @default("N", map: "DF__unit_vers__is_de__23F3538A") @db.Char(1)

  /// publikálva van-e, ha nem akkor vagy megszűnt vagy fejlesztés alatt van
  published String @default("Y", map: "DF__unit_vers__publi__24E777C3") @db.Char(1)

  pack_unit_fields pack_unit[] @relation("Module Version")
  unit_field       unit        @relation("Unit Version", fields: [unit], references: [id], onUpdate: NoAction, map: "fk_unit_version_unit")

  @@unique([unit, version], map: "uq_unit_version")
}

/// MS SQL Server specific table
/// @hidden
model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61FAD3A71A") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}
